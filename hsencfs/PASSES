                               PASSES

 As mentioned in the README file HSENCFS does not manage keys or passwords.
The password becomes the encryption key. Theoretically, one can enter a 256
character password for a 2048 bit encryption key. However this is not a
practical proposition, unless one is really motivated.

 Because the encryption is a variable key length encryption, it cannot be
classified as weak or strong encryption. It is up to the user to create
password(s) with the desired number of bits to suit his/her needs.

 On startup the password is checked against an encrypted file. This file starts
with a random set of characters, and the check is done against that. As the
characters have no correlation to the password, the check is cryptographically
secure. The check is not strictly necessary, as the decryption process can
proceed without it, it is implemented to prevent garbage generation.

 If a password is asked for on a new mount, one that previously did not have a
password, the entered pass is saved as a password / key for that mount.

 Different ways of obtaining the password from the user. The password can
be entered interactively, or on command line or entered into a password
program.

1.) Interactive:
    hsencfs mountdata mountroot

2.) Password program:
    hsencfs -a passprog mountdata mountroot

3.) On demand:
    hsencfs -o -a passprog mountdata mountroot

4.) Command line:
    hsencfs -p password mountdata mountroot

  The least secure is the command line method. (Even though the pass is
obfuscated) The interactive prompt and the password program is more secure.

 There are two password programs supplied with hsencfs. A text based, and
a GUI based. The text based is called 'hsaskpass' and the GUI is
called 'hsaskpass.py'

Password program examples:

    hsenfs -a `which hsaskpass`     mountdata mountroot
    hsenfs -a `which hsaskpass.py`  mountdata mountroot

On Demand Password examples:

    hsenfs -o -a `which hsaskpass.py`  mountdata mountroot

 The which utility is needed to resolve paths, hsencfs needs full
executable paths. 



